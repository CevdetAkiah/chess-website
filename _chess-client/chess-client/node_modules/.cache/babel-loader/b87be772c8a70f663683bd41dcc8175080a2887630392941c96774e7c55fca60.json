{"ast":null,"code":"/**\n * @param {string} position The position of the cell e.g a1\n * @param {number} index.\n * @returns {boolean} true if a square/cell should be labelled as light\n  based on its index\n */export var isLightSquare=function isLightSquare(position,index){var row=position[1];var isEven=function isEven(x){return!(x%2);};if(isEven(row)&&!isEven(index+1)){return true;}if(isEven(index+1)&&!isEven(row)){return true;}return false;};","map":{"version":3,"names":["isLightSquare","position","index","row","isEven","x"],"sources":["/home/cevdet/go-projects/chess-website/_chess-client/chess-client/src/functions/light-square.js"],"sourcesContent":["/**\n * @param {string} position The position of the cell e.g a1\n * @param {number} index.\n * @returns {boolean} true if a square/cell should be labelled as light\n  based on its index\n */\n\n  export const isLightSquare = (position, index) => {\n    const row = position[1];\n    const isEven = (x) => !(x % 2);\n\n    if (isEven(row) && !isEven(index + 1)){\n        return true;\n    }\n\n    if (isEven(index + 1) && !isEven(row)){\n        return true;\n    }\n    return false\n  };"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GAEE,MAAO,IAAM,CAAAA,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,QAAQ,CAAEC,KAAK,CAAK,CAChD,GAAM,CAAAC,GAAG,CAAGF,QAAQ,CAAC,CAAC,CAAC,CACvB,GAAM,CAAAG,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAIC,CAAC,QAAK,EAAEA,CAAC,CAAG,CAAC,CAAC,GAE9B,GAAID,MAAM,CAACD,GAAG,CAAC,EAAI,CAACC,MAAM,CAACF,KAAK,CAAG,CAAC,CAAC,CAAC,CAClC,MAAO,KAAI,CACf,CAEA,GAAIE,MAAM,CAACF,KAAK,CAAG,CAAC,CAAC,EAAI,CAACE,MAAM,CAACD,GAAG,CAAC,CAAC,CAClC,MAAO,KAAI,CACf,CACA,MAAO,MAAK,CACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}