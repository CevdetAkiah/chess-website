{"ast":null,"code":"import _objectSpread from\"/home/cevdet/go-projects/chess-website/_chess-client/chess-client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/cevdet/go-projects/chess-website/_chess-client/chess-client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useReducer}from'react';import GameReducer from'./GameReducer';import{jsx as _jsx}from\"react/jsx-runtime\";var initialState={possibleMoves:[],turn:'',check:false,// true if the side to move (current turn) is in check.\ngameOver:false,status:'',// game over status eg checkmate or stalemate\nplayerName:'',playerColour:'',opponentName:'',opponentColour:'',message:'',opponentMoves:[]};export var GameContext=/*#__PURE__*/createContext(initialState);// GameProvider wraps the Game in App.js which will expose the game reducer functions and state to it's children components\nexport var GameProvider=function GameProvider(_ref){var children=_ref.children;var _useReducer=useReducer(GameReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(GameContext.Provider,{value:_objectSpread(_objectSpread({},state),{},{dispatch:dispatch}),children:children});};","map":{"version":3,"names":["React","createContext","useReducer","GameReducer","jsx","_jsx","initialState","possibleMoves","turn","check","gameOver","status","playerName","playerColour","opponentName","opponentColour","message","opponentMoves","GameContext","GameProvider","_ref","children","_useReducer","_useReducer2","_slicedToArray","state","dispatch","Provider","value","_objectSpread"],"sources":["/home/cevdet/go-projects/chess-website/_chess-client/chess-client/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport GameReducer from './GameReducer';\n\nconst initialState = {\n    possibleMoves: [],\n    turn: '',\n    check: false, // true if the side to move (current turn) is in check.\n    gameOver: false,\n    status: '', // game over status eg checkmate or stalemate\n    playerName: '',\n    playerColour: '',\n    opponentName: '',\n    opponentColour: '',\n    message: '',\n    opponentMoves: [],\n\n};\n\nexport const GameContext = createContext(initialState);\n\n// GameProvider wraps the Game in App.js which will expose the game reducer functions and state to it's children components\nexport const GameProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(GameReducer, initialState);\n\n    return (\n        <GameContext.Provider value ={{ ...state, dispatch }}>\n            {children}\n        </GameContext.Provider>\n    )\n}"],"mappings":"6SAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,KAAQ,OAAO,CACxD,MAAO,CAAAC,WAAW,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,GAAM,CAAAC,YAAY,CAAG,CACjBC,aAAa,CAAE,EAAE,CACjBC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,KAAK,CAAE;AACdC,QAAQ,CAAE,KAAK,CACfC,MAAM,CAAE,EAAE,CAAE;AACZC,UAAU,CAAE,EAAE,CACdC,YAAY,CAAE,EAAE,CAChBC,YAAY,CAAE,EAAE,CAChBC,cAAc,CAAE,EAAE,CAClBC,OAAO,CAAE,EAAE,CACXC,aAAa,CAAE,EAEnB,CAAC,CAED,MAAO,IAAM,CAAAC,WAAW,cAAGjB,aAAa,CAACK,YAAY,CAAC,CAEtD;AACA,MAAO,IAAM,CAAAa,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAAC,IAAA,CAAqB,IAAf,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CACnC,IAAAC,WAAA,CAA0BpB,UAAU,CAACC,WAAW,CAAEG,YAAY,CAAC,CAAAiB,YAAA,CAAAC,cAAA,CAAAF,WAAA,IAAxDG,KAAK,CAAAF,YAAA,IAAEG,QAAQ,CAAAH,YAAA,IAEtB,mBACIlB,IAAA,CAACa,WAAW,CAACS,QAAQ,EAACC,KAAK,CAAAC,aAAA,CAAAA,aAAA,IAAQJ,KAAK,MAAEC,QAAQ,CAARA,QAAQ,EAAG,CAAAL,QAAA,CAChDA,QAAQ,CACS,CAAC,CAE/B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}