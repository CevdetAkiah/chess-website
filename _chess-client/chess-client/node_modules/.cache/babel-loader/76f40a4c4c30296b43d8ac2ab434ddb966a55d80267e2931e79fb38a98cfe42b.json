{"ast":null,"code":"var _jsxFileName = \"/home/cevdet/go-projects/chess-website/_chess-client/chess-client/src/components/userform/loginForm/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { DevTool } from '@hookform/devtools';\nimport axios from 'axios';\nimport './loginForm.css';\nimport RegisterForm from '../regiserForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  var _errors$username, _errors$password;\n  const serverURL = \"http://localhost:8080\";\n  const form = useForm();\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState\n  } = form;\n  const {\n    errors\n  } = formState;\n  const [pop, setPop] = useState(false);\n\n  // send user date to \n  const sendFormData = data => {\n    console.log(data);\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    if (data) {\n      axios.post(serverURL + \"/authenticate\", JSON.stringify(data), config).then(response => {\n        console.log(\"Form response: \", response.status);\n        if (response.status === 200) {\n          // turn off register form\n          togglePop();\n        }\n      });\n    }\n  };\n\n  // controls register form popup\n  const toggleRegisterForm = () => {\n    setPop(!pop);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"loginForm\",\n      style: click ? {\n        display: 'none'\n      } : {},\n      onSubmit: handleSubmit(sendFormData),\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: \"LOG IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Enter email\",\n          ...register(\"email\", {\n            required: 'Email is required',\n            // validation\n            pattern: {\n              // validation\n              value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n              message: 'Invalid email format',\n              validate: {\n                notAdmin: fieldValue => {\n                  return fieldValue !== \"admin@chesswebsite.com\" || \"some other email address\" // change depending on admin email\n                  ;\n                },\n\n                notBlackListed: fieldValue => {\n                  return !fieldValue.endsWith(\"baddomain.com\") || \"This domain is not supported\";\n                }\n              }\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Enter password\",\n          ...register(\"password\", {\n            required: 'Password is required'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"register\",\n        onClick: togglePop,\n        onSubmit: \"\",\n        children: \"REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), click ? /*#__PURE__*/_jsxDEV(RegisterForm, {\n      toggle: toggleRegisterForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"yrcFBwft5QDOWTBXveKZhKpwIlY=\", false, function () {\n  return [useForm];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useForm","DevTool","axios","RegisterForm","jsxDEV","_jsxDEV","LoginForm","_s","_errors$username","_errors$password","serverURL","form","register","control","handleSubmit","formState","errors","pop","setPop","sendFormData","data","console","log","config","headers","post","JSON","stringify","then","response","status","togglePop","toggleRegisterForm","children","className","style","click","display","onSubmit","noValidate","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","required","pattern","value","message","validate","notAdmin","fieldValue","notBlackListed","endsWith","username","password","onClick","toggle","_c","$RefreshReg$"],"sources":["/home/cevdet/go-projects/chess-website/_chess-client/chess-client/src/components/userform/loginForm/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { DevTool } from '@hookform/devtools';\nimport axios from 'axios';\nimport './loginForm.css'\nimport RegisterForm from '../regiserForm';\n\n\nconst LoginForm = () =>{\n\n    const serverURL = \"http://localhost:8080\"\n\n    const form = useForm();\n    const { register, control, handleSubmit, formState } = form;\n    const { errors } = formState;\n    const [pop, setPop] = useState(false)\n\n        // send user date to \n        const sendFormData = (data) => {\n            console.log(data)\n            const config = {\n                headers: { 'Content-Type': 'multipart/form-data' }\n            }\n            if (data) {\n                axios.post(serverURL + \"/authenticate\", JSON.stringify(data), config).then((response) => {\n                    console.log(\"Form response: \", response.status)\n                    if (response.status === 200) {\n                        // turn off register form\n                        togglePop()\n                    }\n                });\n            }\n                        \n        }\n\n        // controls register form popup\nconst toggleRegisterForm = () =>{\n    setPop(!pop);\n};\n\n\n        \n    \nreturn (\n    <div >\n        <form className=\"loginForm\" style={click ? { display: 'none'}: {}}  onSubmit={handleSubmit(sendFormData)} noValidate> \n        <header className=\"header\">LOG IN</header>\n            <div className=\"form-control\">\n            <label>Email</label>\n            <input\n                type='email'\n                id = 'email'\n                placeholder='Enter email'\n                {...register(\"email\", {\n                    required: 'Email is required', // validation\n                    pattern: { // validation\n                        value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                        message: 'Invalid email format',\n                        validate: {\n                            notAdmin: (fieldValue) => {\n                                return (\n                                    fieldValue !== \"admin@chesswebsite.com\" || \"some other email address\" // change depending on admin email\n                                );\n                            },\n                            notBlackListed: (fieldValue) => {\n                                return !fieldValue.endsWith(\"baddomain.com\") || \"This domain is not supported\"\n                            }\n                        }\n                    }\n                })}\n            />\n                <p className=\"error\">{errors.username?.message}</p>\n            </div>\n\n            <div  className=\"form-control\">\n                <label>Password</label>\n                <input\n                    type='password'\n                    id = 'password'\n                    placeholder='Enter password'\n                    {...register(\"password\", {\n                        required: 'Password is required',\n                    })}\n                />\n                <p className=\"error\">{errors.password?.message}</p>\n            </div>\n            <button type=\"submit\" className=\"submit\">Submit</button>\n            <button className=\"register\" onClick={togglePop} onSubmit=\"\">REGISTER</button>      \n        </form>     \n        {click ? <RegisterForm toggle={toggleRegisterForm}/>: null}\n    </div>\n)\n}\n\n\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}