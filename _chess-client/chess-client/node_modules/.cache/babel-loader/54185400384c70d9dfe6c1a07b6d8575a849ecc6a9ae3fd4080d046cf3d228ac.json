{"ast":null,"code":"var _jsxFileName = \"/home/cevdet/go-projects/react-chess/chess-app/src/components/cell/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { isLightSquare, Cell as BoardCell } from '../../functions/';\nimport PropTypes from 'prop-types';\nimport Piece from '../piece';\nimport { GameContext } from '../../context/GameContext';\nimport './cell-styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = ({\n  cell,\n  index,\n  makeMove,\n  setFromPos\n}) => {\n  _s();\n  const light = isLightSquare(cell.pos, index); /**returns true if cell should be light */\n\n  const {\n    possibleMoves\n  } = useContext(GameContext);\n  const isPossibleMove = possibleMoves.includes(cell.pos); // check if this cell's position is a possible move\n\n  const handleDrop = () => {\n    makeMove(cell.pos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `cell ${light ? 'light' : 'dark'}`,\n    onDrop: handleDrop,\n    onDragOver: e => e.preventDefault(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `overlay ${isPossibleMove && 'possible-move'}`,\n      children: /*#__PURE__*/_jsxDEV(Piece, {\n        name: cell.piece,\n        pos: cell.pos,\n        setFromPos: setFromPos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n_s(Cell, \"YMDsJR3DcwFvuKeP2ARv8GVz7AU=\");\n_c = Cell;\nCell.prototype = {\n  cell: PropTypes.instanceOf(BoardCell).isRequired,\n  index: PropTypes.number.isRequired,\n  makeMove: PropTypes.func,\n  setFromPos: PropTypes.func\n};\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","useContext","isLightSquare","Cell","BoardCell","PropTypes","Piece","GameContext","jsxDEV","_jsxDEV","cell","index","makeMove","setFromPos","_s","light","pos","possibleMoves","isPossibleMove","includes","handleDrop","className","onDrop","onDragOver","e","preventDefault","children","name","piece","fileName","_jsxFileName","lineNumber","columnNumber","_c","prototype","instanceOf","isRequired","number","func","$RefreshReg$"],"sources":["/home/cevdet/go-projects/react-chess/chess-app/src/components/cell/index.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { isLightSquare, Cell as BoardCell } from '../../functions/';\nimport PropTypes from 'prop-types';\nimport Piece from'../piece';\nimport { GameContext } from '../../context/GameContext';\nimport './cell-styles.css';\n\nconst Cell = ( {cell, index, makeMove, setFromPos} ) => {\n    const light = isLightSquare(cell.pos, index); /**returns true if cell should be light */\n\n    const { possibleMoves } = useContext(GameContext); \n    const isPossibleMove = possibleMoves.includes(cell.pos); // check if this cell's position is a possible move\n\n\n    const handleDrop = () => {\n        makeMove(cell.pos);\n    };\n\n    return ( \n         <div\n             className={`cell ${light ? 'light' : 'dark'}`}\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n         >\n            <div className={`overlay ${isPossibleMove && 'possible-move'}`}>\n                 <Piece name={cell.piece} pos={cell.pos}  setFromPos={setFromPos} />\n            </div>\n         </div>\n    );\n        \n};\n\nCell.prototype = {\n    cell: PropTypes.instanceOf(BoardCell).isRequired,\n    index: PropTypes.number.isRequired,\n    makeMove: PropTypes.func,\n    setFromPos: PropTypes.func,\n}\n\nexport default Cell;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,aAAa,EAAEC,IAAI,IAAIC,SAAS,QAAQ,kBAAkB;AACnE,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAK,UAAU;AAC3B,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMN,IAAI,GAAGA,CAAE;EAACO,IAAI;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAM;EAAAC,EAAA;EACpD,MAAMC,KAAK,GAAGb,aAAa,CAACQ,IAAI,CAACM,GAAG,EAAEL,KAAK,CAAC,CAAC,CAAC;;EAE9C,MAAM;IAAEM;EAAc,CAAC,GAAGhB,UAAU,CAACM,WAAW,CAAC;EACjD,MAAMW,cAAc,GAAGD,aAAa,CAACE,QAAQ,CAACT,IAAI,CAACM,GAAG,CAAC,CAAC,CAAC;;EAGzD,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACrBR,QAAQ,CAACF,IAAI,CAACM,GAAG,CAAC;EACtB,CAAC;EAED,oBACKP,OAAA;IACIY,SAAS,EAAG,QAAON,KAAK,GAAG,OAAO,GAAG,MAAO,EAAE;IAC/CO,MAAM,EAAEF,UAAW;IACnBG,UAAU,EAAGC,CAAC,IAAKA,CAAC,CAACC,cAAc,CAAC,CAAE;IAAAC,QAAA,eAEtCjB,OAAA;MAAKY,SAAS,EAAG,WAAUH,cAAc,IAAI,eAAgB,EAAE;MAAAQ,QAAA,eAC1DjB,OAAA,CAACH,KAAK;QAACqB,IAAI,EAAEjB,IAAI,CAACkB,KAAM;QAACZ,GAAG,EAAEN,IAAI,CAACM,GAAI;QAAEH,UAAU,EAAEA;MAAW;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGf,CAAC;AAAClB,EAAA,CAvBIX,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAyBVA,IAAI,CAAC+B,SAAS,GAAG;EACbxB,IAAI,EAAEL,SAAS,CAAC8B,UAAU,CAAC/B,SAAS,CAAC,CAACgC,UAAU;EAChDzB,KAAK,EAAEN,SAAS,CAACgC,MAAM,CAACD,UAAU;EAClCxB,QAAQ,EAAEP,SAAS,CAACiC,IAAI;EACxBzB,UAAU,EAAER,SAAS,CAACiC;AAC1B,CAAC;AAED,eAAenC,IAAI;AAAC,IAAA8B,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}