{"ast":null,"code":"var _jsxFileName = \"/home/cevdet/go-projects/react-chess/chess-app/src/components/piece/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './piece-styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Piece = ({\n  name,\n  pos,\n  setFromPos\n}) => {\n  const colour = name === name.toUpperCase() ? 'w' : 'b'; /**if name is upper case then it's a white piece */\n  const imageName = colour + name.toUpperCase();\n  let image;\n  try {\n    image = require(`../../assets/pieces/${imageName}.png`);\n  } catch (error) {\n    image = require('../../assets/pieces/empty.png');\n  }\n  const handleDragStart = () => {\n    setFromPos(pos);\n    setTimeout(() => {\n      Element.current.style.display = 'none';\n    }, 0);\n  };\n  const handleDragEnd = () => {\n    Element.current.style.display = 'block';\n  };\n  return /*#__PURE__*/_jsxDEV(\"image\", {\n    className: \"piece\",\n    style: {\n      background: `url(${image}) center center/cover`\n    },\n    alt: \"\",\n    draggable: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = Piece;\nPiece.prototype = {\n  name: PropTypes.string.isRequired,\n  pos: PropTypes.string.isRequired\n};\nexport default Piece;\nvar _c;\n$RefreshReg$(_c, \"Piece\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Piece","name","pos","setFromPos","colour","toUpperCase","imageName","image","require","error","handleDragStart","setTimeout","Element","current","style","display","handleDragEnd","className","background","alt","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c","prototype","string","isRequired","$RefreshReg$"],"sources":["/home/cevdet/go-projects/react-chess/chess-app/src/components/piece/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './piece-styles.css';\n\nconst Piece = ({ name, pos, setFromPos }) =>{\n    const colour = name === name.toUpperCase() ? 'w' : 'b'; /**if name is upper case then it's a white piece */\n    const imageName = colour + name.toUpperCase();\n    let image;\n\n    try{\n        image = require(`../../assets/pieces/${imageName}.png`);\n    } catch (error){\n        image = require('../../assets/pieces/empty.png');\n    }\n\n    const handleDragStart = () => {\n        setFromPos(pos)\n        setTimeout(() => {\n            Element.current.style.display = 'none';\n        },0);\n    };\n    const handleDragEnd = () => {\n        Element.current.style.display = 'block';\n    }\n\n    return (\n        <image\n            className=\"piece\"\n            style={{\n                background: `url(${image}) center center/cover`\n            }}\n            alt=\"\"\n            draggable={true}\n        />\n    );\n};\n\nPiece.prototype = {\n    name: PropTypes.string.isRequired,\n    pos: PropTypes.string.isRequired,\n};\nexport default Piece;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC,GAAG;EAAEC;AAAW,CAAC,KAAI;EACxC,MAAMC,MAAM,GAAGH,IAAI,KAAKA,IAAI,CAACI,WAAW,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;EACxD,MAAMC,SAAS,GAAGF,MAAM,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC;EAC7C,IAAIE,KAAK;EAET,IAAG;IACCA,KAAK,GAAGC,OAAO,CAAE,uBAAsBF,SAAU,MAAK,CAAC;EAC3D,CAAC,CAAC,OAAOG,KAAK,EAAC;IACXF,KAAK,GAAGC,OAAO,CAAC,+BAA+B,CAAC;EACpD;EAEA,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC1BP,UAAU,CAACD,GAAG,CAAC;IACfS,UAAU,CAAC,MAAM;MACbC,OAAO,CAACC,OAAO,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IAC1C,CAAC,EAAC,CAAC,CAAC;EACR,CAAC;EACD,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBJ,OAAO,CAACC,OAAO,CAACC,KAAK,CAACC,OAAO,GAAG,OAAO;EAC3C,CAAC;EAED,oBACIhB,OAAA;IACIkB,SAAS,EAAC,OAAO;IACjBH,KAAK,EAAE;MACHI,UAAU,EAAG,OAAMX,KAAM;IAC7B,CAAE;IACFY,GAAG,EAAC,EAAE;IACNC,SAAS,EAAE;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACC,EAAA,GA/BIzB,KAAK;AAiCXA,KAAK,CAAC0B,SAAS,GAAG;EACdzB,IAAI,EAAEJ,SAAS,CAAC8B,MAAM,CAACC,UAAU;EACjC1B,GAAG,EAAEL,SAAS,CAAC8B,MAAM,CAACC;AAC1B,CAAC;AACD,eAAe5B,KAAK;AAAC,IAAAyB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}