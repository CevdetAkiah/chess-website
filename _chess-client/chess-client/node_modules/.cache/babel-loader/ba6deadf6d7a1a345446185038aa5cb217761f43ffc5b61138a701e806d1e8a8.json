{"ast":null,"code":"var _jsxFileName = \"/home/cevdet/go-projects/react-chess/chess-app/src/context/GameContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\nimport GameReducer from './GameReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  possibleMoves: [],\n  turn: '',\n  check: false // true if the side to move (current turn) is in check.\n};\n\nexport const GameContext = /*#__PURE__*/createContext(initialState);\n\n// GameProvider wraps the Game in App.js which will expose the game reducer functions and state to it's children components\nexport const GameProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(GameReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(GameProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useReducer","GameReducer","jsxDEV","_jsxDEV","initialState","possibleMoves","turn","check","GameContext","GameProvider","children","_s","state","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cevdet/go-projects/react-chess/chess-app/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport GameReducer from './GameReducer';\n\nconst initialState = {\n    possibleMoves: [],\n    turn: '',\n    check: false, // true if the side to move (current turn) is in check.\n};\n\nexport const GameContext = createContext(initialState);\n\n// GameProvider wraps the Game in App.js which will expose the game reducer functions and state to it's children components\nexport const GameProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(GameReducer, initialState);\n\n    return (\n        <GameContext.Provider value ={{ ...state, dispatch }}>\n            {children}\n        </GameContext.Provider>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAG;EACjBC,aAAa,EAAE,EAAE;EACjBC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,KAAK,CAAE;AAClB,CAAC;;AAED,OAAO,MAAMC,WAAW,gBAAGT,aAAa,CAACK,YAAY,CAAC;;AAEtD;AACA,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,UAAU,CAACC,WAAW,EAAEG,YAAY,CAAC;EAE/D,oBACID,OAAA,CAACK,WAAW,CAACM,QAAQ;IAACC,KAAK,EAAG;MAAE,GAAGH,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAChDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAR,EAAA,CARYF,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}