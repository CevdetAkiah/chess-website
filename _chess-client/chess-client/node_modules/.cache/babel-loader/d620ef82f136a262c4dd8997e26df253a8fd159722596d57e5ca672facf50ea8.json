{"ast":null,"code":"import React,{useContext}from'react';import{isLightSquare,Cell as BoardCell}from'../../functions/';import PropTypes from'prop-types';import Piece from'../piece';import{GameContext}from'../../context/GameContext';import'./cell-styles.css';import{jsx as _jsx}from\"react/jsx-runtime\";var Cell=function Cell(_ref){var cell=_ref.cell,index=_ref.index,makeMove=_ref.makeMove,setFromPos=_ref.setFromPos;var light=isLightSquare(cell.pos,index);/**returns true if cell should be light */var _useContext=useContext(GameContext),possibleMoves=_useContext.possibleMoves,turn=_useContext.turn,check=_useContext.check,playerColour=_useContext.playerColour;var isPossibleMove=possibleMoves.includes(cell.pos)&&turn===playerColour;// check if this cell's position is a possible move\nvar colour=cell.piece.toUpperCase()===cell.piece?'w':'b';// TODO: inCheck is returning false when it shouldn't\nvar inCheck=function inCheck(){var king=cell.piece.toUpperCase==='K';return turn===colour&&king&&check;// return true if the turn is the colour of current player and the piece is a king and in check (according to Chess.js)\n};var handleDrop=function handleDrop(){if(turn===playerColour){makeMove(cell.pos);}};return/*#__PURE__*/_jsx(\"div\",{className:\"cell \".concat(light?'light':'dark'),onDrop:handleDrop,onDragOver:function onDragOver(e){return e.preventDefault();},children:/*#__PURE__*/_jsx(\"div\",{className:\"overlay \".concat(isPossibleMove&&'possible-move',\" \").concat(inCheck()&&'check'),children:/*#__PURE__*/_jsx(Piece,{name:cell.piece,pos:cell.pos,setFromPos:setFromPos})})});};Cell.prototype={cell:PropTypes.instanceOf(BoardCell).isRequired,index:PropTypes.number.isRequired,makeMove:PropTypes.func,setFromPos:PropTypes.func};export default Cell;","map":{"version":3,"names":["React","useContext","isLightSquare","Cell","BoardCell","PropTypes","Piece","GameContext","jsx","_jsx","_ref","cell","index","makeMove","setFromPos","light","pos","_useContext","possibleMoves","turn","check","playerColour","isPossibleMove","includes","colour","piece","toUpperCase","inCheck","king","handleDrop","className","concat","onDrop","onDragOver","e","preventDefault","children","name","prototype","instanceOf","isRequired","number","func"],"sources":["/home/cevdet/go-projects/chess-website/_chess-client/chess-client/src/components/cell/index.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { isLightSquare, Cell as BoardCell } from '../../functions/';\nimport PropTypes from 'prop-types';\nimport Piece from'../piece';\nimport { GameContext } from '../../context/GameContext';\nimport './cell-styles.css';\n\nconst Cell = ( {cell, index, makeMove, setFromPos} ) => {\n    const light = isLightSquare(cell.pos, index); /**returns true if cell should be light */\n    const { possibleMoves, turn, check, playerColour  } = useContext(GameContext); \n    const isPossibleMove = possibleMoves.includes(cell.pos) && turn === playerColour; // check if this cell's position is a possible move\n    const colour = cell.piece.toUpperCase() === cell.piece ? 'w' : 'b';\n        // TODO: inCheck is returning false when it shouldn't\n    const inCheck = () => {\n        const king = cell.piece.toUpperCase === 'K';\n        return turn === colour && king && check; // return true if the turn is the colour of current player and the piece is a king and in check (according to Chess.js)\n    }\n\n    const handleDrop = () => {\n        if (turn === playerColour){\n            makeMove(cell.pos);\n        }\n    };\n        \n    return ( \n            <div\n                className={`cell ${light ? 'light' : 'dark'}`}\n                onDrop={handleDrop}\n                onDragOver={(e) => e.preventDefault()}\n                >\n                <div className={`overlay ${isPossibleMove && 'possible-move'} ${ inCheck() && 'check' }`}>\n                        <Piece name={cell.piece} pos={cell.pos}  setFromPos={setFromPos} />\n                </div>\n            </div>\n        );\n\n\n        \n};\n\nCell.prototype = {\n    cell: PropTypes.instanceOf(BoardCell).isRequired,\n    index: PropTypes.number.isRequired,\n    makeMove: PropTypes.func,\n    setFromPos: PropTypes.func,\n}\n\nexport default Cell;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,aAAa,CAAEC,IAAI,GAAI,CAAAC,SAAS,KAAQ,kBAAkB,CACnE,MAAO,CAAAC,SAAS,KAAM,YAAY,CAClC,MAAO,CAAAC,KAAK,KAAK,UAAU,CAC3B,OAASC,WAAW,KAAQ,2BAA2B,CACvD,MAAO,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE3B,GAAM,CAAAN,IAAI,CAAG,QAAP,CAAAA,IAAIA,CAAAO,IAAA,CAA8C,IAAxC,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,CAAEC,KAAK,CAAAF,IAAA,CAALE,KAAK,CAAEC,QAAQ,CAAAH,IAAA,CAARG,QAAQ,CAAEC,UAAU,CAAAJ,IAAA,CAAVI,UAAU,CAC7C,GAAM,CAAAC,KAAK,CAAGb,aAAa,CAACS,IAAI,CAACK,GAAG,CAAEJ,KAAK,CAAC,CAAE,0CAC9C,IAAAK,WAAA,CAAsDhB,UAAU,CAACM,WAAW,CAAC,CAArEW,aAAa,CAAAD,WAAA,CAAbC,aAAa,CAAEC,IAAI,CAAAF,WAAA,CAAJE,IAAI,CAAEC,KAAK,CAAAH,WAAA,CAALG,KAAK,CAAEC,YAAY,CAAAJ,WAAA,CAAZI,YAAY,CAChD,GAAM,CAAAC,cAAc,CAAGJ,aAAa,CAACK,QAAQ,CAACZ,IAAI,CAACK,GAAG,CAAC,EAAIG,IAAI,GAAKE,YAAY,CAAE;AAClF,GAAM,CAAAG,MAAM,CAAGb,IAAI,CAACc,KAAK,CAACC,WAAW,CAAC,CAAC,GAAKf,IAAI,CAACc,KAAK,CAAG,GAAG,CAAG,GAAG,CAC9D;AACJ,GAAM,CAAAE,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,CAClB,GAAM,CAAAC,IAAI,CAAGjB,IAAI,CAACc,KAAK,CAACC,WAAW,GAAK,GAAG,CAC3C,MAAO,CAAAP,IAAI,GAAKK,MAAM,EAAII,IAAI,EAAIR,KAAK,CAAE;AAC7C,CAAC,CAED,GAAM,CAAAS,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACrB,GAAIV,IAAI,GAAKE,YAAY,CAAC,CACtBR,QAAQ,CAACF,IAAI,CAACK,GAAG,CAAC,CACtB,CACJ,CAAC,CAED,mBACQP,IAAA,QACIqB,SAAS,SAAAC,MAAA,CAAUhB,KAAK,CAAG,OAAO,CAAG,MAAM,CAAG,CAC9CiB,MAAM,CAAEH,UAAW,CACnBI,UAAU,CAAE,SAAAA,WAACC,CAAC,QAAK,CAAAA,CAAC,CAACC,cAAc,CAAC,CAAC,EAAC,CAAAC,QAAA,cAEtC3B,IAAA,QAAKqB,SAAS,YAAAC,MAAA,CAAaT,cAAc,EAAI,eAAe,MAAAS,MAAA,CAAKJ,OAAO,CAAC,CAAC,EAAI,OAAO,CAAI,CAAAS,QAAA,cACjF3B,IAAA,CAACH,KAAK,EAAC+B,IAAI,CAAE1B,IAAI,CAACc,KAAM,CAACT,GAAG,CAAEL,IAAI,CAACK,GAAI,CAAEF,UAAU,CAAEA,UAAW,CAAE,CAAC,CACtE,CAAC,CACL,CAAC,CAKlB,CAAC,CAEDX,IAAI,CAACmC,SAAS,CAAG,CACb3B,IAAI,CAAEN,SAAS,CAACkC,UAAU,CAACnC,SAAS,CAAC,CAACoC,UAAU,CAChD5B,KAAK,CAAEP,SAAS,CAACoC,MAAM,CAACD,UAAU,CAClC3B,QAAQ,CAAER,SAAS,CAACqC,IAAI,CACxB5B,UAAU,CAAET,SAAS,CAACqC,IAC1B,CAAC,CAED,cAAe,CAAAvC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}