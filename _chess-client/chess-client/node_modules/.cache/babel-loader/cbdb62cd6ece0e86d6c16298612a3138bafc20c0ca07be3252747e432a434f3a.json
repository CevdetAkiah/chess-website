{"ast":null,"code":"var _jsxFileName = \"/home/cevdet/go-projects/react-chess/chess-app/src/components/cell/index.jsx\";\nimport React from 'react';\nimport './cell-styles.css';\nimport { isLightSquare, Cell as BoardCell } from '../../functions/';\nimport PropTypes from 'prop-types';\nimport Piece from '../piece';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = ({\n  cell,\n  index,\n  makeMove,\n  setFromPos\n}) => {\n  const light = isLightSquare(cell.pos, index); /**returns true if cell should be light */\n\n  const handleDrop = () => {\n    makeMove(cell.pos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `cell ${light ? 'light' : 'dark'}`,\n    onDrop: handleDrop,\n    onDragOver: e => e.preventDefault(),\n    children: /*#__PURE__*/_jsxDEV(Piece, {\n      name: cell.piece,\n      pos: cell.pos,\n      setFromPos: setFromPos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n_c = Cell;\nCell.prototype = {\n  cell: PropTypes.instanceOf(BoardCell).isRequired,\n  index: PropTypes.number.isRequired,\n  makeMove: PropTypes.func,\n  setFromPos: PropTypes.func\n};\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","isLightSquare","Cell","BoardCell","PropTypes","Piece","jsxDEV","_jsxDEV","cell","index","makeMove","setFromPos","light","pos","handleDrop","className","onDrop","onDragOver","e","preventDefault","children","name","piece","fileName","_jsxFileName","lineNumber","columnNumber","_c","prototype","instanceOf","isRequired","number","func","$RefreshReg$"],"sources":["/home/cevdet/go-projects/react-chess/chess-app/src/components/cell/index.jsx"],"sourcesContent":["import React from 'react';\nimport './cell-styles.css';\nimport { isLightSquare, Cell as BoardCell } from '../../functions/';\nimport PropTypes from 'prop-types';\nimport Piece from'../piece';\n\nconst Cell = ( {cell, index, makeMove, setFromPos} ) => {\n    const light = isLightSquare(cell.pos, index); /**returns true if cell should be light */\n\n    const handleDrop = () => {\n        makeMove(cell.pos);\n    };\n\n    return ( \n         <div\n             className={`cell ${light ? 'light' : 'dark'}`}\n            onDrop={handleDrop}\n            onDragOver={(e) => e.preventDefault()}\n         >\n            <Piece name={cell.piece} pos={cell.pos}  setFromPos={setFromPos} />\n         </div>\n    );\n        \n};\n\nCell.prototype = {\n    cell: PropTypes.instanceOf(BoardCell).isRequired,\n    index: PropTypes.number.isRequired,\n    makeMove: PropTypes.func,\n    setFromPos: PropTypes.func,\n}\n\nexport default Cell;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAC1B,SAASC,aAAa,EAAEC,IAAI,IAAIC,SAAS,QAAQ,kBAAkB;AACnE,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAK,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAML,IAAI,GAAGA,CAAE;EAACM,IAAI;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAM;EACpD,MAAMC,KAAK,GAAGX,aAAa,CAACO,IAAI,CAACK,GAAG,EAAEJ,KAAK,CAAC,CAAC,CAAC;;EAE9C,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACrBJ,QAAQ,CAACF,IAAI,CAACK,GAAG,CAAC;EACtB,CAAC;EAED,oBACKN,OAAA;IACIQ,SAAS,EAAG,QAAOH,KAAK,GAAG,OAAO,GAAG,MAAO,EAAE;IAC/CI,MAAM,EAAEF,UAAW;IACnBG,UAAU,EAAGC,CAAC,IAAKA,CAAC,CAACC,cAAc,CAAC,CAAE;IAAAC,QAAA,eAEtCb,OAAA,CAACF,KAAK;MAACgB,IAAI,EAAEb,IAAI,CAACc,KAAM;MAACT,GAAG,EAAEL,IAAI,CAACK,GAAI;MAAEF,UAAU,EAAEA;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAGf,CAAC;AAACC,EAAA,GAjBIzB,IAAI;AAmBVA,IAAI,CAAC0B,SAAS,GAAG;EACbpB,IAAI,EAAEJ,SAAS,CAACyB,UAAU,CAAC1B,SAAS,CAAC,CAAC2B,UAAU;EAChDrB,KAAK,EAAEL,SAAS,CAAC2B,MAAM,CAACD,UAAU;EAClCpB,QAAQ,EAAEN,SAAS,CAAC4B,IAAI;EACxBrB,UAAU,EAAEP,SAAS,CAAC4B;AAC1B,CAAC;AAED,eAAe9B,IAAI;AAAC,IAAAyB,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}