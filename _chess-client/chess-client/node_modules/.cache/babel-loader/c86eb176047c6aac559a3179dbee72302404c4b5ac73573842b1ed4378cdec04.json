{"ast":null,"code":"import _slicedToArray from\"/home/cevdet/go-projects/chess-website/_chess-client/chess-client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useRef,useEffect,useContext}from'react';import{Chess}from'chess.js';import{createBoard}from'../../functions/create-board';import Board from'../../components/board';import{GameContext}from'../../context/GameContext';import{setMessage,setOpponent,setOpponentColour,setOpponentMoves,setPlayer,setPlayerColour,types}from'../../context/actions';import{getGameOverState}from'../../functions';import GameOver from'../../components/gameover';import io from'socket.io-client';import{jsx as _jsx}from\"react/jsx-runtime\";var socket=io('localhost:5000',{transports:['websocket']});var FEN='rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';// checkmate for testing game over screen\n// const FEN = 'rnb1kbnr/pppp1ppp/8/4p3/5PPq/8/PPPPP2P/RNBQKBNR w KQkq - 1 3';\nvar Game=function Game(){var _useState=useState(FEN),_useState2=_slicedToArray(_useState,2),fen=_useState2[0],setFen=_useState2[1];var _useRef=useRef(new Chess(fen)),chess=_useRef.current;var _useState3=useState(createBoard(fen)),_useState4=_slicedToArray(_useState3,2),board=_useState4[0],setBoard=_useState4[1];var _useContext=useContext(GameContext),gameOver=_useContext.gameOver;var _useContext2=useContext(GameContext),possibleMoves=_useContext2.possibleMoves,dispatch=_useContext2.dispatch;// every time a change is made to the state of the game, the board is updated with the new fen\nuseEffect(function(){setBoard(createBoard(fen));},[fen]);// listening for events from the server\nuseEffect(function(){socket.on('connect_error',function(error){console.log('Websocket connection error: ',error);});socket.emit('join',{name:'Frank',gameID:'20'},function(_ref){var error=_ref.error,name=_ref.name,colour=_ref.colour;if(error){console.log(error);}dispatch(setPlayer(name));dispatch(setPlayerColour(colour));});socket.on('welcome',function(_ref2){var message=_ref2.message,opponent=_ref2.opponent;dispatch(setMessage(message));dispatch(setOpponent(opponent));});socket.on('opponentJoin',function(_ref3){var message=_ref3.message,opponent=_ref3.opponent;dispatch(setMessage(message));dispatch(setOpponent(opponent));dispatch(setOpponentColour(opponent.colour));});socket.on('opponentLeft',function(_ref4){var message=_ref4.message;console.log(message);});socket.on('opponentMove',function(_ref5){var from=_ref5.from,to=_ref5.to;chess.move({from:from,to:to});setFen(chess.fen());dispatch(setMessage('Your Turn'));dispatch(setOpponentMoves([from,to]));});socket.on('message',function(_ref6){var message=_ref6.message;console.log(message);});},[chess,dispatch]);// will detect if a player is in check\nuseEffect(function(){var _getGameOverState=getGameOverState(chess),_getGameOverState2=_slicedToArray(_getGameOverState,2),gameOver=_getGameOverState2[0],status=_getGameOverState2[1];if(gameOver){dispatch({type:types.GAME_OVER,status:status,player:chess.turn()});return;}dispatch({type:types.SET_TURN,player:chess.turn(),check:chess.isCheck()});},[fen,dispatch,chess]);/** move handling */var fromPos=useRef();/** follow setFromPos to the piece component */ // share move set with components\nvar makeMove=function makeMove(pos){var from=fromPos.current;var to=pos;var validMove=possibleMoves.includes(to);if(validMove){chess.move({from:from,to:to});socket.emit('move',{gameID:'20',from:from,to:to});// send moves to the other player through the websocket\ndispatch({type:types.CLEAR_POSSIBLE_MOVES});// unhighlight possible moves\nsetFen(chess.fen());// update the fen with the new move/piece positions\n}};// this is called once a piece is dragged\nvar setFromPos=function setFromPos(pos){fromPos.current=pos;dispatch({type:types.SET_POSSIBLE_MOVES,moves:chess.moves({square:pos})// send the possible moves from the currently selected position to highlight\n});};// if (gameOver) {\n//     return <GameOver />\n// };\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"game\",children:/*#__PURE__*/_jsx(Board,{cells:board,makeMove:makeMove,setFromPos:setFromPos})});};export default Game;","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","Chess","createBoard","Board","GameContext","setMessage","setOpponent","setOpponentColour","setOpponentMoves","setPlayer","setPlayerColour","types","getGameOverState","GameOver","io","jsx","_jsx","socket","transports","FEN","Game","_useState","_useState2","_slicedToArray","fen","setFen","_useRef","chess","current","_useState3","_useState4","board","setBoard","_useContext","gameOver","_useContext2","possibleMoves","dispatch","on","error","console","log","emit","name","gameID","_ref","colour","_ref2","message","opponent","_ref3","_ref4","_ref5","from","to","move","_ref6","_getGameOverState","_getGameOverState2","status","type","GAME_OVER","player","turn","SET_TURN","check","isCheck","fromPos","makeMove","pos","validMove","includes","CLEAR_POSSIBLE_MOVES","setFromPos","SET_POSSIBLE_MOVES","moves","square","className","children","cells"],"sources":["/home/cevdet/go-projects/chess-website/_chess-client/chess-client/src/pages/Game/index.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext} from 'react';\nimport {Chess} from 'chess.js';\nimport { createBoard } from '../../functions/create-board';\nimport Board from  '../../components/board';\nimport { GameContext } from '../../context/GameContext';\nimport {     \n    setMessage,\n    setOpponent,\n    setOpponentColour,\n    setOpponentMoves,\n    setPlayer,\n    setPlayerColour,\n    types, } from '../../context/actions';\nimport { getGameOverState } from '../../functions';\nimport  GameOver from '../../components/gameover';\nimport io from 'socket.io-client';\n\n\nconst socket = io('localhost:5000', {\n    transports: ['websocket']\n});\nconst FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n// checkmate for testing game over screen\n// const FEN = 'rnb1kbnr/pppp1ppp/8/4p3/5PPq/8/PPPPP2P/RNBQKBNR w KQkq - 1 3';\n\nconst Game = ()=> {\n    const[fen, setFen] = useState(FEN);\n    const {current: chess} = useRef(new Chess(fen));\n    const [board,setBoard] = useState(createBoard(fen));\n    const {gameOver} = useContext(GameContext);\n    const { possibleMoves, dispatch } = useContext(GameContext);\n\n\n \n    // every time a change is made to the state of the game, the board is updated with the new fen\n    useEffect(() =>{\n        setBoard(createBoard(fen));\n    }, [fen]);\n\n\n        \n    // listening for events from the server\n\n    useEffect(() => {\n        socket.on('connect_error', (error) => {\n            console.log('Websocket connection error: ', error)\n        });\n\n            socket.emit('join', { name: 'Frank', gameID: '20' }, ({ error, name, colour }) => {\n                if (error){\n                    console.log(error)\n                }\n                dispatch(setPlayer(name));\n                dispatch(setPlayerColour(colour))\n            });\n\n\n        socket.on('welcome', ({ message, opponent }) => {\n            dispatch(setMessage(message));\n            dispatch(setOpponent(opponent));\n        });\n        socket.on('opponentJoin', ({ message, opponent }) => {\n            dispatch(setMessage(message));\n            dispatch(setOpponent(opponent));\n            dispatch(setOpponentColour(opponent.colour));\n        });\n        socket.on('opponentLeft', ({ message }) => {\n            console.log(message)\n        });\n    \n        socket.on('opponentMove', ({ from, to }) => {\n            chess.move({ from, to });\n            setFen(chess.fen());\n            dispatch(setMessage('Your Turn'));\n            dispatch(setOpponentMoves([from, to]));\n        });\n        socket.on('message',({ message })=> {\n            console.log(message)\n        });\n\n}, [chess, dispatch]);\n\n\n    // will detect if a player is in check\n    useEffect(() =>{\n        const [gameOver, status] = getGameOverState(chess);\n        if (gameOver) {\n            dispatch({ type: types.GAME_OVER, status, player: chess.turn() });\n            return\n        }\n        dispatch({\n            type: types.SET_TURN,\n            player: chess.turn(),\n            check: chess.isCheck(),\n        });\n    }, [fen, dispatch, chess]);\n\n    /** move handling */\n    const fromPos = useRef(); /** follow setFromPos to the piece component */\n\n    // share move set with components\n\n    const makeMove = (pos) =>{\n        const from = fromPos.current;\n        const to = pos;\n\n        var validMove = possibleMoves.includes(to)\n         if (validMove){\n            chess.move({ from, to });\n            socket.emit('move', { gameID: '20', from, to}) // send moves to the other player through the websocket\n            dispatch({ type: types.CLEAR_POSSIBLE_MOVES}) // unhighlight possible moves\n            setFen(chess.fen()); // update the fen with the new move/piece positions\n        }\n    };\n\n    // this is called once a piece is dragged\n    const setFromPos = (pos) => {\n        fromPos.current = pos\n        dispatch({\n            type:types.SET_POSSIBLE_MOVES,\n            moves: chess.moves({ square: pos }) // send the possible moves from the currently selected position to highlight\n        })\n    };\n\n\n\n\n\n\n    // if (gameOver) {\n    //     return <GameOver />\n    // };\n\n    return (\n            <div className=\"game\">\n            <Board cells = {board} makeMove={makeMove} setFromPos={setFromPos}/>\n            </div>\n        );\n\n};\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}