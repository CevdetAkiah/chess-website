{"ast":null,"code":"export class Cell {\n  constructor(pos, piece) {\n    this.pos = pos;\n    this.piece = piece;\n  }\n}\n\n//  returns an array of range 1, n\nconst range = n => {\n  return Array.from({\n    length: n\n  }, (_, i) => i + 1);\n};\n\n/**\n *\n * @param {String} fenString rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\n * @returns {Cell[]}\n */\nexport const createBoard = fenString => {\n  const fen = fenString.split(' ')[0]; //Get the first portion\n\n  const fenPieces = fen.split('/').join(''); //remove the row delimiters '/'\n  //rnbqkbnrpppppppp8888PPPPPPPPRNBQKBNR\n\n  let pieces = Array.from(fenPieces);\n\n  //Save individual pieces for each of the 64 cells\n  Array.from(fenPieces).forEach((item, index) => {\n    if (isFinite(item)) {\n      pieces.splice(index, 1, range(item).fill(''));\n    }\n  });\n  pieces = pieces.flat();\n  const rows = range(8).map(n => n.toString()).reverse(); //[\"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"]\n\n  const columns = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const cells = []; //[a1, b1, c1..., h8]\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    for (let j = 0; j < columns.length; j++) {\n      const col = columns[j];\n      cells.push(col + row); //e.g a1, b1, c1...\n    }\n  }\n\n  const board = [];\n  for (let i = 0; i < cells.length; i++) {\n    //'cells', and 'pieces' have the same length of 64\n    const cell = cells[i];\n    const piece = pieces[pieces.length - i - 1];\n    nCell = new Cell(cell, piece);\n    console.log(nCell);\n    board.push(nCell);\n  }\n  return board;\n};","map":{"version":3,"names":["Cell","constructor","pos","piece","range","n","Array","from","length","_","i","createBoard","fenString","fen","split","fenPieces","join","pieces","forEach","item","index","isFinite","splice","fill","flat","rows","map","toString","reverse","columns","cells","row","j","col","push","board","cell","nCell","console","log"],"sources":["/home/cevdet/go-projects/react-chess/chess-app/src/functions/create-board.js"],"sourcesContent":["export class Cell {\n    constructor(pos, piece) {\n        this.pos = pos;\n        this.piece = piece;\n    }\n}\n\n\n//  returns an array of range 1, n\nconst range = (n) => {\n    return Array.from({ length: n }, (_, i) => i + 1);\n};\n\n/**\n *\n * @param {String} fenString rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\n * @returns {Cell[]}\n */\nexport const createBoard = (fenString) => {\n    const fen = fenString.split(' ')[0]; //Get the first portion\n\n    const fenPieces = fen.split('/').join(''); //remove the row delimiters '/'\n    //rnbqkbnrpppppppp8888PPPPPPPPRNBQKBNR\n\n    let pieces = Array.from(fenPieces);\n\n    //Save individual pieces for each of the 64 cells\n    Array.from(fenPieces).forEach((item, index) => {\n        if (isFinite(item)) {\n            pieces.splice(index, 1, range(item).fill(''));\n        }\n    });\n    pieces = pieces.flat();\n\n    const rows = range(8)\n        .map((n) => n.toString())\n        .reverse(); //[\"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"]\n\n    const columns = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n\n    const cells = []; //[a1, b1, c1..., h8]\n    for (let i = 0; i < rows.length; i++) {\n        const row = rows[i];\n        for (let j = 0; j < columns.length; j++) {\n            const col = columns[j];\n            cells.push(col + row); //e.g a1, b1, c1...\n        }\n    }\n    const board = [];\n    for (let i = 0; i < cells.length; i++) {\n        //'cells', and 'pieces' have the same length of 64\n        const cell = cells[i];\n        \n        const piece = pieces[pieces.length -i -1];\n        nCell = new Cell(cell,piece);\n        console.log(nCell);\n        board.push(nCell);\n    }\n\n    return board;\n};\n\n"],"mappings":"AAAA,OAAO,MAAMA,IAAI,CAAC;EACdC,WAAWA,CAACC,GAAG,EAAEC,KAAK,EAAE;IACpB,IAAI,CAACD,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,KAAK,GAAGA,KAAK;EACtB;AACJ;;AAGA;AACA,MAAMC,KAAK,GAAIC,CAAC,IAAK;EACjB,OAAOC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEH;EAAE,CAAC,EAAE,CAACI,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;AACrD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAIC,SAAS,IAAK;EACtC,MAAMC,GAAG,GAAGD,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErC,MAAMC,SAAS,GAAGF,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3C;;EAEA,IAAIC,MAAM,GAAGX,KAAK,CAACC,IAAI,CAACQ,SAAS,CAAC;;EAElC;EACAT,KAAK,CAACC,IAAI,CAACQ,SAAS,CAAC,CAACG,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC3C,IAAIC,QAAQ,CAACF,IAAI,CAAC,EAAE;MAChBF,MAAM,CAACK,MAAM,CAACF,KAAK,EAAE,CAAC,EAAEhB,KAAK,CAACe,IAAI,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC;IACjD;EACJ,CAAC,CAAC;EACFN,MAAM,GAAGA,MAAM,CAACO,IAAI,CAAC,CAAC;EAEtB,MAAMC,IAAI,GAAGrB,KAAK,CAAC,CAAC,CAAC,CAChBsB,GAAG,CAAErB,CAAC,IAAKA,CAAC,CAACsB,QAAQ,CAAC,CAAC,CAAC,CACxBC,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEhB,MAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAExD,MAAMC,KAAK,GAAG,EAAE,CAAC,CAAC;EAClB,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGe,IAAI,CAACjB,MAAM,EAAEE,CAAC,EAAE,EAAE;IAClC,MAAMqB,GAAG,GAAGN,IAAI,CAACf,CAAC,CAAC;IACnB,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACrB,MAAM,EAAEwB,CAAC,EAAE,EAAE;MACrC,MAAMC,GAAG,GAAGJ,OAAO,CAACG,CAAC,CAAC;MACtBF,KAAK,CAACI,IAAI,CAACD,GAAG,GAAGF,GAAG,CAAC,CAAC,CAAC;IAC3B;EACJ;;EACA,MAAMI,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIzB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoB,KAAK,CAACtB,MAAM,EAAEE,CAAC,EAAE,EAAE;IACnC;IACA,MAAM0B,IAAI,GAAGN,KAAK,CAACpB,CAAC,CAAC;IAErB,MAAMP,KAAK,GAAGc,MAAM,CAACA,MAAM,CAACT,MAAM,GAAEE,CAAC,GAAE,CAAC,CAAC;IACzC2B,KAAK,GAAG,IAAIrC,IAAI,CAACoC,IAAI,EAACjC,KAAK,CAAC;IAC5BmC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBF,KAAK,CAACD,IAAI,CAACG,KAAK,CAAC;EACrB;EAEA,OAAOF,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}