{"ast":null,"code":"/**\n * @param {string} position The position of the cell e.g a1\n * @param {number} index.\n * @returns {boolean} true if a square/cell should be labelled as light\n  based on its index\n */\n\nexport const isLightSquare = (position, index) => {\n  const row = position[1];\n  const isEven = x => !(x % 2);\n  if (isEven(row) && !isEven(index + 1)) {\n    return true;\n  }\n  if (isEven(index + 1) && !isEven(row)) {\n    return true;\n  }\n  return false;\n};","map":{"version":3,"names":["isLightSquare","position","index","row","isEven","x"],"sources":["/home/cevdet/go-projects/chess-website/_chess-client/chess-client/src/functions/light-square.js"],"sourcesContent":["/**\n * @param {string} position The position of the cell e.g a1\n * @param {number} index.\n * @returns {boolean} true if a square/cell should be labelled as light\n  based on its index\n */\n\n  export const isLightSquare = (position, index) => {\n    const row = position[1];\n    const isEven = (x) => !(x % 2);\n\n    if (isEven(row) && !isEven(index + 1)){\n        return true;\n    }\n\n    if (isEven(index + 1) && !isEven(row)){\n        return true;\n    }\n    return false\n  };"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAO,MAAMA,aAAa,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAChD,MAAMC,GAAG,GAAGF,QAAQ,CAAC,CAAC,CAAC;EACvB,MAAMG,MAAM,GAAIC,CAAC,IAAK,EAAEA,CAAC,GAAG,CAAC,CAAC;EAE9B,IAAID,MAAM,CAACD,GAAG,CAAC,IAAI,CAACC,MAAM,CAACF,KAAK,GAAG,CAAC,CAAC,EAAC;IAClC,OAAO,IAAI;EACf;EAEA,IAAIE,MAAM,CAACF,KAAK,GAAG,CAAC,CAAC,IAAI,CAACE,MAAM,CAACD,GAAG,CAAC,EAAC;IAClC,OAAO,IAAI;EACf;EACA,OAAO,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}