{"ast":null,"code":"/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR(opts) {\n  Polling.call(this, opts);\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n    this.xd = opts.hostname != global.location.hostname || port != opts.port;\n    this.xs = opts.secure != isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({\n    method: 'POST',\n    data: data,\n    isBinary: isBinary\n  });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request(opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined != opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = {\n    agent: this.agent,\n    xdomain: this.xd,\n    xscheme: this.xs,\n    enablesXDR: this.enablesXDR\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n    if ('POST' == this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (4 != xhr.readyState) return;\n        if (200 == xhr.status || 1223 == xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' == typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (global.document) {\n  Request.requestsCount = 0;\n  Request.requests = {};\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","map":{"version":3,"names":["XMLHttpRequest","require","Polling","Emitter","inherit","debug","module","exports","XHR","Request","empty","opts","call","global","location","isSSL","protocol","port","xd","hostname","xs","secure","extraHeaders","prototype","supportsBinary","request","uri","agent","enablesXDR","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","doWrite","data","fn","isBinary","undefined","req","method","self","on","err","onError","sendXhr","doPoll","onData","pollXhr","async","create","xdomain","xscheme","xhr","open","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","responseType","withCredentials","hasXDR","onload","onLoad","onerror","responseText","onreadystatechange","readyState","status","setTimeout","send","document","index","requestsCount","requests","onSuccess","emit","cleanup","fromError","abort","contentType","getResponseHeader","split","response","String","fromCharCode","apply","Uint8Array","ui8Arr","dataArray","idx","length","push","XDomainRequest","attachEvent","unloadHandler","addEventListener"],"sources":["/home/cevdet/go-projects/chess-website/_chess-client/chess-client/node_modules/engine.io-client/lib/transports/polling-xhr.js"],"sourcesContent":["/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty(){}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR(opts){\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname != global.location.hostname ||\n      port != opts.port;\n    this.xs = opts.secure != isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function(opts){\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function(data, fn){\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function(err){\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function(){\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function(data){\n    self.onData(data);\n  });\n  req.on('error', function(err){\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request(opts){\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined != opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function(){\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' == this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function(){\n        self.onLoad();\n      };\n      xhr.onerror = function(){\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function(){\n        if (4 != xhr.readyState) return;\n        if (200 == xhr.status || 1223 == xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function(){\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function() {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function(){\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data){\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err){\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function(fromError){\n  if ('undefined' == typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch(e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function(){\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function(){\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (global.document) {\n  Request.requestsCount = 0;\n  Request.requests = {};\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}