{"ast":null,"code":"var _jsxFileName = \"/home/cevdet/go-projects/react-chess/chess-client/src/pages/Game/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useContext } from 'react';\nimport Chess from 'chess.js';\nimport io from 'socket.io-client';\nimport { createBoard } from '../../functions';\nimport Board from '../../components/board';\nimport { GameContext } from '../../context/GameContext';\nimport { types } from '../../context/actions';\nimport getGameOverState from '../../functions/game-over.js';\nimport GameOver from '../../components/gameover';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\nconst socket = io('localhost:5000');\nconst Game = () => {\n  _s();\n  const [fen, setFen] = useState(FEN);\n  const {\n    current: chess\n  } = useRef(new Chess(fen));\n  const [board, setBoard] = useState(createBoard(fen));\n  const {\n    dispatch,\n    gameOver\n  } = useContext(GameContext);\n  useEffect(() => {\n    setBoard(createBoard(fen));\n  }, [fen]);\n  useEffect(() => {\n    socket.emit('join', {\n      name: 'Frank',\n      gameID: '20'\n    }, ({\n      error,\n      color\n    }) => {\n      console.log({\n        color\n      });\n    });\n    socket.on('Welcome', ({\n      message,\n      opponent\n    }) => {\n      console.log({\n        message,\n        opponent\n      });\n    });\n    socket.on('opponentJoin', ({\n      message,\n      opponent\n    }) => {\n      console.log({\n        message,\n        opponent\n      });\n    });\n    socket.on('opponentMove', ({\n      from,\n      to\n    }) => {\n      chess.move({\n        from,\n        to\n      });\n      setFen(chess.fen());\n    });\n  }, [chess]);\n  useEffect(() => {\n    const [gameOver, status] = getGameOverState(chess);\n    if (gameOver) {\n      dispatch({\n        type: types.GAME_OVER,\n        status,\n        player: chess.turn()\n      });\n      return;\n    }\n    dispatch({\n      type: types.SET_TURN,\n      player: chess.turn(),\n      check: chess.in_check()\n    });\n  }, [fen, dispatch, chess]);\n  const fromPos = useRef();\n  const makeMove = pos => {\n    const from = fromPos.current;\n    chess.move({\n      from,\n      to: pos\n    });\n    dispatch({\n      type: types.CLEAR_POSSIBLE_MOVES\n    });\n    setFen(chess.fen());\n    socket.emit('move', {\n      gameID: '20',\n      from,\n      to: pos\n    });\n  };\n  const setFromPos = pos => {\n    fromPos.current = pos;\n    dispatch({\n      type: types.SET_POSSIBLE_MOVES,\n      moves: chess.moves({\n        square: pos\n      })\n    });\n  };\n  if (gameOver) {\n    return /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      cells: board,\n      makeMove: makeMove,\n      setFromPos: setFromPos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n};\n_s(Game, \"CtJrZpR+dedEZ0mfJMd4ZmkrZX8=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useContext","Chess","io","createBoard","Board","GameContext","types","getGameOverState","GameOver","jsxDEV","_jsxDEV","FEN","socket","Game","_s","fen","setFen","current","chess","board","setBoard","dispatch","gameOver","emit","name","gameID","error","color","console","log","on","message","opponent","from","to","move","status","type","GAME_OVER","player","turn","SET_TURN","check","in_check","fromPos","makeMove","pos","CLEAR_POSSIBLE_MOVES","setFromPos","SET_POSSIBLE_MOVES","moves","square","fileName","_jsxFileName","lineNumber","columnNumber","className","children","cells","_c","$RefreshReg$"],"sources":["/home/cevdet/go-projects/react-chess/chess-client/src/pages/Game/index.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useContext } from 'react';\nimport Chess from 'chess.js';\nimport io from 'socket.io-client';\nimport { createBoard } from '../../functions';\nimport Board from '../../components/board';\nimport { GameContext } from '../../context/GameContext';\nimport { types } from '../../context/actions';\nimport getGameOverState from '../../functions/game-over.js';\nimport GameOver from '../../components/gameover';\nconst FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\nconst socket = io('localhost:5000');\n\nconst Game = () => {\n\tconst [fen, setFen] = useState(FEN);\n\tconst { current: chess } = useRef(new Chess(fen));\n\tconst [board, setBoard] = useState(createBoard(fen));\n\tconst { dispatch, gameOver } = useContext(GameContext);\n\n\tuseEffect(() => {\n\t\tsetBoard(createBoard(fen));\n\t}, [fen]);\n\n\tuseEffect(() => {\n\t\tsocket.emit('join', { name: 'Frank', gameID: '20' }, ({ error, color }) => {\n\t\t\tconsole.log({ color });\n\t\t});\n\t\tsocket.on('Welcome', ({ message, opponent }) => {\n\t\t\tconsole.log({ message, opponent });\n\t\t});\n\t\tsocket.on('opponentJoin', ({ message, opponent }) => {\n\t\t\tconsole.log({ message, opponent });\n\t\t});\n\n\t\tsocket.on('opponentMove', ({ from, to }) => {\n\t\t\tchess.move({ from, to });\n\t\t\tsetFen(chess.fen());\n\t\t});\n\t}, [chess]);\n\n\tuseEffect(() => {\n\t\tconst [gameOver, status] = getGameOverState(chess);\n\t\tif (gameOver) {\n\t\t\tdispatch({ type: types.GAME_OVER, status, player: chess.turn() });\n\t\t\treturn;\n\t\t}\n\t\tdispatch({\n\t\t\ttype: types.SET_TURN,\n\t\t\tplayer: chess.turn(),\n\t\t\tcheck: chess.in_check(),\n\t\t});\n\t}, [fen, dispatch, chess]);\n\n\tconst fromPos = useRef();\n\n\tconst makeMove = (pos) => {\n\t\tconst from = fromPos.current;\n\t\tchess.move({ from, to: pos });\n\t\tdispatch({ type: types.CLEAR_POSSIBLE_MOVES });\n\t\tsetFen(chess.fen());\n\t\tsocket.emit('move', { gameID: '20', from, to: pos });\n\t};\n\n\tconst setFromPos = (pos) => {\n\t\tfromPos.current = pos;\n\t\tdispatch({\n\t\t\ttype: types.SET_POSSIBLE_MOVES,\n\t\t\tmoves: chess.moves({ square: pos }),\n\t\t});\n\t};\n\tif (gameOver) {\n\t\treturn <GameOver />;\n\t}\n\treturn (\n\t\t<div className=\"game\">\n\t\t\t<Board cells={board} makeMove={makeMove} setFromPos={setFromPos} />\n\t\t</div>\n\t);\n};\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}