name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-server:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3      
    
    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: server
        file: ./server/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: nailien/chess-backend:${{ github.sha }}
        cache-from: type=registry,ref=nailien/chess-backend:buildcache
        cache-to: type=registry,ref=nailien/chess-backend:buildcache,mode=max

  build-client:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3      
    
    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: client
        file: ./client/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: nailien/chess-frontend:${{ github.sha }}
        cache-from: type=registry,ref=nailien/chess-frontend:buildcache
        cache-to: type=registry,ref=nailien/chess-frontend:buildcache,mode=max

  deploy-to-dev:
    needs:
    - build-server
    - build-client
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4


      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
      

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v2.0.0
      


      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: "${{ secrets.KUBECONFIG }}" 
          
      - name: Test kubectl access
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig.yaml
          kubectl config view --kubeconfig=kubeconfig.yaml
          kubectl get pods
          kubectl config use-context default
          kubectl config view
          kubectl config current-context
          kubectl cluster-info

      - name: Create pg-app Secret
        run: |
          kubectl create secret generic pg-app \
            --from-literal=password=$(echo "${{ secrets.PG_APP_PASSWORD }}" | base64 --decode) \
            --from-literal=user=$(echo "${{ secrets.PG_APP_USER }}" | base64 --decode) \
            --from-literal=dbname=$(echo "${{ secrets.PG_APP_DATABASE }}" | base64 --decode) \
            --from-literal=host=$(echo "${{ secrets.PG_APP_HOST }}" | base64 --decode)

      - name: Deploy new tags
        run: |
          set -euxo pipefail
          cd deploy/dev
          kustomize edit set image 'frontend-placeholder=docker.io/nailien/chess-frontend:${{ github.sha }}'
          kustomize edit set image 'backend-placeholder=docker.io/nailien/chess-backend:${{ github.sha }}'
          
          git config --global user.email "ci-bot@example.com"
          git config --global user.name "ci-bot"
          git add kustomization.yaml
          git commit -m "bot: deploy image tags ${{ github.sha }}"
          git push
      
      - name: Build and apply Kustomize manifests
        run: |
          kustomize build --enable-helm . | kubectl apply -f -