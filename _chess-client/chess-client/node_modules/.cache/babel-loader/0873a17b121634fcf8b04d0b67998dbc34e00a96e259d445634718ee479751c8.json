{"ast":null,"code":"var _jsxFileName = \"/home/cevdet/go-projects/react-chess/chess-app/src/components/gameover/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { GameContext } from '../../context/GameContext';\nimport Layout from '../layout';\nimport './gameover-styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameOver = () => {\n  _s();\n  const {\n    status,\n    turn\n  } = useContext(GameContext);\n  let winner;\n  if (status === 'checkmate') {\n    if (turn === 'b') {\n      winner = 'white';\n    } else {\n      winner = 'black';\n    }\n  }\n  const Content = () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Game over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The game ended in a \", /*#__PURE__*/_jsxDEV(\"mark\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"mark\", {\n        children: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), \" won\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: require('../../assets/play-again.jpg'),\n      alt: \"play again\",\n      className: \"img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n  const Image = () => /*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"bg-img\",\n    src: require('../../assets/game-over.jpg'),\n    alt: \"game over\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    Image: Image,\n    Content: Content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n};\n_s(GameOver, \"ybfDU+7xUC2ctKEp9cHlToaKw58=\");\n_c = GameOver;\nexport default GameOver;\nvar _c;\n$RefreshReg$(_c, \"GameOver\");","map":{"version":3,"names":["React","useContext","GameContext","Layout","jsxDEV","_jsxDEV","GameOver","_s","status","turn","winner","Content","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","src","require","alt","className","Image","_c","$RefreshReg$"],"sources":["/home/cevdet/go-projects/react-chess/chess-app/src/components/gameover/index.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { GameContext } from '../../context/GameContext';\nimport Layout from '../layout';\nimport './gameover-styles.css';\n\nconst GameOver = () => {\n    const { status, turn } = useContext(GameContext);\n    let winner;\n    if (status === 'checkmate') {\n        if (turn === 'b') {\n            winner = 'white';\n        } else{\n            winner = 'black';\n        }\n    }\n    \n    \n    const Content = () => (\n        <React.Fragment>\n        <h1> Game over</h1>\n        <p>\n            The game ended in a <mark>{status}</mark>\n        </p>\n        {winner && (\n            <p>\n                <mark>{winner}</mark> won\n            </p>\n        )}\n        <img\n            src={require('../../assets/play-again.jpg')}\n            alt=\"play again\"\n            className=\"img\"\n        />\n        <button>Play Again</button>\n    </React.Fragment>\n    );\n    const Image = () => (\n        <img\n            className=\"bg-img\"\n            src={require('../../assets/game-over.jpg')}\n            alt=\"game over\"\n        />\n    );\n    return <Layout Image={Image} Content={Content} />\n}\n\nexport default GameOver"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;EAChD,IAAIQ,MAAM;EACV,IAAIF,MAAM,KAAK,WAAW,EAAE;IACxB,IAAIC,IAAI,KAAK,GAAG,EAAE;MACdC,MAAM,GAAG,OAAO;IACpB,CAAC,MAAK;MACFA,MAAM,GAAG,OAAO;IACpB;EACJ;EAGA,MAAMC,OAAO,GAAGA,CAAA,kBACZN,OAAA,CAACL,KAAK,CAACY,QAAQ;IAAAC,QAAA,gBACfR,OAAA;MAAAQ,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBZ,OAAA;MAAAQ,QAAA,GAAG,sBACqB,eAAAR,OAAA;QAAAQ,QAAA,EAAOL;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EACHP,MAAM,iBACHL,OAAA;MAAAQ,QAAA,gBACIR,OAAA;QAAAQ,QAAA,EAAOH;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,QACzB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACN,eACDZ,OAAA;MACIa,GAAG,EAAEC,OAAO,CAAC,6BAA6B,CAAE;MAC5CC,GAAG,EAAC,YAAY;MAChBC,SAAS,EAAC;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFZ,OAAA;MAAAQ,QAAA,EAAQ;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CACf;EACD,MAAMK,KAAK,GAAGA,CAAA,kBACVjB,OAAA;IACIgB,SAAS,EAAC,QAAQ;IAClBH,GAAG,EAAEC,OAAO,CAAC,4BAA4B,CAAE;IAC3CC,GAAG,EAAC;EAAW;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CACJ;EACD,oBAAOZ,OAAA,CAACF,MAAM;IAACmB,KAAK,EAAEA,KAAM;IAACX,OAAO,EAAEA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrD,CAAC;AAAAV,EAAA,CAvCKD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAyCd,eAAeA,QAAQ;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}